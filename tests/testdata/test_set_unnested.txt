structure(list(id = c("s300000520_57bc6aade4b0da66e75aa7d9", 
"s300000520_57e0327ae4b007430cbdcdc0", "s300000520_5889094ee4b0877a91bd42ec", 
"s300000520_58b73420e4b0ebcbf06fdb3c", "s300000520_589a29f3e4b0cfc8b41c8978"
), name = c("UsrAccessType_CORP", "database_like", "Knovel - ChemE_top ChemE_selected (hits)", 
"Alpha users (hits)", "ThermoPhysDyn_ContentName"), description = c("Filtering on user access type (evar33; element)  to support e.g. pulling NROWs of searches by user segment. \nHIT level for specificity", 
"Not databases, but contains data points >= 100K. Note that these should NOT overlap with items in Mike Gray's Databases_All segment. This is a modular segment not intended to be used by itself, but rather be combined via OR with other segments, namely Mike Gray's Databases_All.", 
"Top accounts for Acad, Corp, Govt; N = 40 rules; RuleOP = contains", 
"Alpha user visitor segment", ""), reportSuiteID = c("elsevier-kn-prod", 
"elsevier-kn-prod", "elsevier-kn-prod", "elsevier-kn-prod", "elsevier-kn-prod"
), owner = c("w.zhang", "w.zhang", "w.zhang", "w.zhang", "w.zhang"
), definition = structure(list(container = structure(list(type = c("hits", 
"hits", "hits", "hits", "hits"), rules = list(structure(list(
    name = "User Access Type [v33] (evar33)", element = "evar33", 
    operator = "contains", value = "corporate"), .Names = c("name", 
"element", "operator", "value"), class = "data.frame", row.names = 1L), 
    structure(list(name = c("Content ID (Products)", "Content ID (Products)", 
    "Content ID (Products)", "Content ID (Products)", "Content ID (Products)", 
    "Content ID (Products)", "Content ID (Products)", "Content ID (Products)", 
    "Content ID (Products)", "Content ID (Products)", "Content ID (Products)"
    ), element = c("product", "product", "product", "product", 
    "product", "product", "product", "product", "product", "product", 
    "product"), operator = c("equals", "equals", "equals", "equals", 
    "equals", "equals", "equals", "equals", "equals", "equals", 
    "equals"), value = c("kpFCCE00", "kpCRPEEE", "kpHARSA0", 
    "kpHARSAE", "kpHA000003", "kpPMDS00", "kpWEAE00", "kpWGEISE", 
    "kpWGENMA", "kpMMPDSM", "kpASMEBP")), .Names = c("name", 
    "element", "operator", "value"), class = "data.frame", row.names = c(NA, 
    11L)), structure(list(name = c("Account Number [v16]", "Account Number [v16]", 
    "Account Number [v16]", "Account Number [v16]", "Account Number [v16]", 
    "Account Number [v16]", "Account Number [v16]", "Account Number [v16]", 
    "Account Number [v16]", "Account Number [v16]", "Account Number [v16]", 
    "Account Number [v16]", "Account Number [v16]", "Account Number [v16]", 
    "Account Number [v16]", "Account Number [v16]", "Account Number [v16]", 
    "Account Number [v16]", "Account Number [v16]", "Account Number [v16]", 
    "Account Number [v16]", "Account Number [v16]", "Account Number [v16]", 
    "Account Number [v16]", "Account Number [v16]", "Account Number [v16]", 
    "Account Number [v16]", "Account Number [v16]", "Account Number [v16]", 
    "Account Number [v16]", "Account Number [v16]", "Account Number [v16]", 
    "Account Number [v16]", "Account Number [v16]", "Account Number [v16]", 
    "Account Number [v16]", "Account Number [v16]", "Account Number [v16]", 
    "Account Number [v16]", "Account Number [v16]"), element = c("evar16", 
    "evar16", "evar16", "evar16", "evar16", "evar16", "evar16", 
    "evar16", "evar16", "evar16", "evar16", "evar16", "evar16", 
    "evar16", "evar16", "evar16", "evar16", "evar16", "evar16", 
    "evar16", "evar16", "evar16", "evar16", "evar16", "evar16", 
    "evar16", "evar16", "evar16", "evar16", "evar16", "evar16", 
    "evar16", "evar16", "evar16", "evar16", "evar16", "evar16", 
    "evar16", "evar16", "evar16"), operator = c("contains", "contains", 
    "contains", "contains", "contains", "contains", "contains", 
    "contains", "contains", "contains", "contains", "contains", 
    "contains", "contains", "contains", "contains", "contains", 
    "contains", "contains", "contains", "contains", "contains", 
    "contains", "contains", "contains", "contains", "contains", 
    "contains", "contains", "contains", "contains", "contains", 
    "contains", "contains", "contains", "contains", "contains", 
    "contains", "contains", "contains"), value = c("|27649-", 
    ":27649-", "|135503-", ":135503-", "|204953-", ":204953-", 
    "|30969-", ":30969-", "|60437-", ":60437-", "|18265-", ":18265-", 
    "|78409-", ":78409-", "|162127-", ":162127-", "|40543-", 
    ":40543-", "|192467-", ":192467-", "|41751-", ":41751-", 
    "|286281-", ":286281-", "|47931-", ":47931-", "|125315-", 
    ":125315-", "|139047-", ":139047-", "|78125-", ":78125-", 
    "|154257-", ":154257-", "|238729-", ":238729-", "|44859-", 
    ":44859-", "|215305-", ":215305-")), .Names = c("name", "element", 
    "operator", "value"), class = "data.frame", row.names = c(NA, 
    40L)), structure(list(name = c("User (Entitling) ID [v29]", 
    "User (Entitling) ID [v29]", "User (Entitling) ID [v29]", 
    "User (Entitling) ID [v29]", "User (Entitling) ID [v29]", 
    "User (Entitling) ID [v29]", "User (Entitling) ID [v29]", 
    "User (Entitling) ID [v29]", "User (Entitling) ID [v29]", 
    "User (Entitling) ID [v29]", "User (Entitling) ID [v29]", 
    "User (Entitling) ID [v29]", "User (Entitling) ID [v29]", 
    "User (Entitling) ID [v29]", "User (Entitling) ID [v29]", 
    "User (Entitling) ID [v29]"), element = c("evar29", "evar29", 
    "evar29", "evar29", "evar29", "evar29", "evar29", "evar29", 
    "evar29", "evar29", "evar29", "evar29", "evar29", "evar29", 
    "evar29", "evar29"), operator = c("equals", "equals", "equals", 
    "equals", "equals", "equals", "equals", "equals", "equals", 
    "equals", "equals", "equals", "equals", "equals", "equals", 
    "equals"), value = c("264945", "1376577", "244943", "1390263", 
    "1362147", "1491573", "25311", "1103999", "kn:264945", "kn:1376577", 
    "kn:244943", "kn:1390263", "kn:1362147", "kn:1491573", "kn:25311", 
    "kn:1103999")), .Names = c("name", "element", "operator", 
    "value"), class = "data.frame", row.names = c(NA, 16L)), 
    structure(list(name = c("Content Name [v75]", "Content Name [v75]", 
    "Content Name [v75]", "Content Name [v75]", "Content Name [v75]", 
    "Content Name [v75]", "Content Name [v75]", "Content Name [v75]"
    ), element = c("evar75", "evar75", "evar75", "evar75", "evar75", 
    "evar75", "evar75", "evar75"), operator = c("equals", "equals", 
    "equals", "equals", "equals", "equals", "equals", "equals"
    ), value = c("dippr project 801 - full version", "knovel critical tables (2nd edition)", 
    "yaws' critical property data for chemical engineers and chemists", 
    "yaws' handbook of physical properties for hydrocarbons and chemicals", 
    "yaws' handbook of properties of the chemical elements", 
    "yaws' handbook of thermodynamic and physical properties of chemical compounds", 
    "yaws' handbook of thermodynamic properties for hydrocarbons and chemicals", 
    "yaws' thermophysical properties of chemicals and hydrocarbons (electronic edition)"
    )), .Names = c("name", "element", "operator", "value"), class = "data.frame", row.names = c(NA, 
    8L))), operator = c(NA, "or", "or", "or", "or")), .Names = c("type", 
"rules", "operator"), row.names = c(2L, 8L, 33L, 55L, 35L), class = "data.frame")), .Names = "container", row.names = c(2L, 
8L, 33L, 55L, 35L), class = "data.frame"), compatibility = list(
    c("reportsAndAnalytics", "adHocAnalysis", "dataWarehouse"
    ), c("reportsAndAnalytics", "adHocAnalysis", "dataWarehouse"
    ), c("reportsAndAnalytics", "adHocAnalysis", "dataWarehouse"
    ), c("reportsAndAnalytics", "adHocAnalysis", "dataWarehouse"
    ), c("reportsAndAnalytics", "adHocAnalysis", "dataWarehouse"
    )), shares = list(structure(list(), .Names = character(0), row.names = integer(0), class = "data.frame"), 
    structure(list(), .Names = character(0), row.names = integer(0), class = "data.frame"), 
    structure(list(), .Names = character(0), row.names = integer(0), class = "data.frame"), 
    structure(list(), .Names = character(0), row.names = integer(0), class = "data.frame"), 
    structure(list(type = "user", name = "m.gray"), .Names = c("type", 
    "name"), class = "data.frame", row.names = 1L)), favorite = c(FALSE, 
FALSE, FALSE, FALSE, FALSE), tags = list("Search", character(0), 
    character(0), character(0), "SA_CNAME"), modified = c("2016-12-22 07:12:25", 
"2017-02-13 20:29:29", "2017-01-25 12:23:42", "2017-03-01 12:55:19", 
"2017-02-26 19:08:15")), .Names = c("id", "name", "description", 
"reportSuiteID", "owner", "definition", "compatibility", "shares", 
"favorite", "tags", "modified"), row.names = c(2L, 8L, 33L, 55L, 
35L), class = "data.frame")
