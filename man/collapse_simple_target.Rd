% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/collapse_simple_target.R
\name{collapse_simple_target}
\alias{collapse_simple_target}
\title{Collapse a target list-column to a delimited atomic vector}
\usage{
collapse_simple_target(x, targ = NULL)
}
\arguments{
\item{x}{A data.frame}

\item{targ}{A character vector of length 1 to denote the column in \emph{x} to operate on}
}
\value{
A unnested character vector; see \code{\link{collapse_simple_listcol}} for details.
}
\description{
A custom mechanism to unnest simple list-columns by collapsing into a delimited atomic vector
}
\details{
This wraps the internal function \code{collapse_simple_listcol} to handle more (and) typical
inputs, with some additional constraints. \emph{targ} is set to a default of \code{NULL}
intentionally, for flexibility and to enforce explicit provision of a value. However, it 
is expected that the valid values should typically be:

\itemize{
\item \preformatted{tags}
\item \preformatted{compatibility}
}
}
\note{
This function is called by \code{\link{call.Get_base}} if that function's \emph{collapse_simple}
argument is \code{TRUE}.
}
\examples{
\dontrun{
simple_df <- data.frame(
  x = LETTERS[1:10],
  y = cbind(c(
    list(c(LETTERS[1:2])),
    list(c("tag1", "tag2", "tag3")),
    list(c("", NA_character_, " ")),
    letters[1:7])
  ),
  stringsAsFactors = FALSE
)
collapse_simple_target(simple_df, targ = "y")
simple_df$z <- collapse_simple_target(simple_df, targ = "y")
# Note that NA and blank will are counted, if present:
data.frame(
  n_parts = vapply(simple_df$z, function(f)
    nchar(gsub("[^,]", "", f))+1L, integer(1))
)
}
}
\seealso{
Other internal: \code{\link{GetEndpoint}},
  \code{\link{GetUsageLog}}, \code{\link{ParseDW}},
  \code{\link{ParseFallout}}, \code{\link{ParseOvertime}},
  \code{\link{ParsePathing}}, \code{\link{ParseRanked}},
  \code{\link{ParseSummary}}, \code{\link{ParseTrended}},
  \code{\link{call.Get_base}},
  \code{\link{collapse_simple_listcol}},
  \code{\link{split_segment_ret}}
}
