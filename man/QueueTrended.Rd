% Generated by roxygen2 (4.0.1): do not edit by hand
\name{QueueTrended}
\alias{QueueTrended}
\title{Run a QueueTrended Report}
\usage{
<<<<<<< HEAD
QueueTrended(reportsuite.id, date.from, date.to, metrics, elements, top = 0,
  start = 0, selected = c(), search = c(), search.type = "or",
  date.granularity = "day", segment.id = "", segment.inline = "",
  anomaly.detection = FALSE, data.current = FALSE, expedite = FALSE,
  interval.seconds = 5, max.attempts = 120)
}
\arguments{
\item{reportsuite.id}{Report suite id}

\item{date.from}{Start date for the report (YYYY-MM-DD)}

\item{date.to}{End date for the report (YYYY-MM-DD)}

\item{metrics}{List of metrics to include in the report}

\item{elements}{List of elements to include in the report}

\item{top}{Number of rows to return}

\item{start}{Start row if you do not want to start at #1}

\item{selected}{List of specific items (of the first element) to include in the report - e.g. c("www:home","www:search","www:about")}

\item{search}{List of keywords for the first specified element - e.g. c("contact","about","shop").
search overrides anything specified using selected}

\item{search.type}{String specifying the search type: 'and', or, 'or' 'not' (defaults to 'or')}

\item{date.granularity}{Time granularity of the report (year/month/week/day/hour), default to 'day'}

\item{segment.id}{Id of Adobe Analytics segment to retrieve the report for}

\item{segment.inline}{Inline segment definition}

\item{anomaly.detection}{Set to TRUE to include forecast data (only valid for day granularity with small date ranges)}

\item{data.current}{TRUE or FALSE - whether to include current data for reports that include today's date}

\item{expedite}{Set to TRUE to expedite the processing of this report}

\item{interval.seconds}{How long to wait between attempts}

\item{max.attempts}{Number of API attempts before stopping}
}
\value{
Data frame
}
\description{
A QueueTrended report is a report where a single metric is
retrieved, broken down by an element such as page, eVar, prop, etc. and with
a time component. Within the 'element' list, either the "Top X" number of
elements can be received or you can specify the specific elements you are
interested in (such as 3 specific page names).
}
\details{
The QueueTrended report is analogous to pulling a "trended"
report within Adobe Reports & Analytics, but without the limitation of
only 5 elements as in the Adobe Reports & Analytics interface.

Because of the Reporting API structure, this function first requests the
report, then checks the reporting queue to see if the report is completed,
and when the report returns as "done" pulls the report from the API. This
checking process will occur up to the specified number of times (default 120),
with a delay between status checks (default 5 seconds). If the report does not
return as "done" after the number of tries have completed, the function will return
an error message.

Note: Because of the multiple argument type ("top" and "start" OR "selected"),
keyword arguments are generally needed towards the end of the function call
=======
QueueTrended(reportSuiteID, dateFrom, dateTo, dateGranularity, metric, element,
  top = "", startingWith = "", selected = "", segment_id = "",
  anomalyDetection = "", currentData = "", searchType = "",
  searchKW = "", maxTries = 120, waitTime = 5)
}
\arguments{
  \item{reportSuiteID}{Report Suite ID}

  \item{dateFrom}{Report Start Date in "YYYY-MM-DD" format}

  \item{dateTo}{Report End Date in "YYYY-MM-DD" format}

  \item{dateGranularity}{"Day", "Week", "Month", "Quarter"
  or "Year" (case-insensitive).}

  \item{metric}{The metric you want to trend.}

  \item{element}{The element (page, browser eVar, prop) for
  the report to be broken down by.}

  \item{top}{How many results you want trended. Used in
  combination with "startingWith". Not used if "selected"
  argument used.}

  \item{startingWith}{The first ranked number you want in
  the report. Used in combination with "top". Not used if
  "selected" argument used.}

  \item{selected}{List of selected values, such as specific
  pages or eVar values. Not used if "top" and
  "startingWith" arguments are used}

  \item{segment_id}{Optional. If no segment_id is
  specified, metrics will be reported for all visitors.}

  \item{anomalyDetection}{Optional. Use value of "1" to get
  anomaly detection results. Results only returned by API
  for 'Day' granularity.}

  \item{currentData}{Optional. Use value of "1" to get
  current data results. Only needed when dateTo is greater
  than or equal to the current day.}

  \item{searchType}{Optional. An enumerated list of boolean
  values used to link multiple search terms in a report
  search. Takes values of "AND", "OR" or "NOT".}

  \item{searchKW}{Optional. A list of keywords to include
  or exclude from the search, based on the searchType.
  Keyword values can also leverage the following special
  characters: '*' (Wild card), '^' (Starts With), '$' (Ends
  With). "Top" argument required when using regex
  functionality.}

  \item{maxTries}{Optional. Provide integer value for the
  max number of API attempts you want to try retrieve the
  report before function errors out. Defaults to 120.}

  \item{waitTime}{Optional. Provide integer value for the
  number of seconds between tries to API to try retrieve
  the report. Defaults to 5 seconds.}
}
\value{
Data Frame
}
\description{
A QueueTrended report is a report where a single metric is
retrieved, broken down by an element such as page, eVar,
prop, etc. and with a time component. Within the 'element'
list, either the "Top X" number of elements can be received
or you can specify the specific elements you are interested
in (such as 3 specific page names).
}
\details{
The QueueTrended report is analogous to pulling a "trended"
report within SiteCatalyst, but without the limitation of
only 5 elements as in the SiteCatalyst interface.

Because of the Reporting API structure, this function first
requests the report, then checks the reporting queue to see
if the report is completed, and when the report returns as
"done" pulls the report from the API. This checking process
will occur up to the specified number of times (default
120), with a delay between status checks (default 5
seconds). If the report does not return as "done" after the
number of tries have completed, the function will return an
error message.

Note: Because of the multiple argument type ("top" and
"startingWith" OR "selected"), keyword arguments are
generally needed towards the end of the function call
>>>>>>> master
instead of just positional arguments.
}
\examples{
\dontrun{
<<<<<<< HEAD
report.data <- QueueTrended("your_report_suite",
                            "2014-01-01",
                            "2014-01-07",
                            c("visits","uniquevisitors","pageviews","event10"),
                            c("page","geoCountry","geoCity")
                            )
}
}
=======

#Pageviews for the Top 100 pages by Day in the Loyal_Visitors segment
pages_by_day <-
QueueTrended("keystonerandy", "2013-02-13", "2013-02-19", "day",
"pageviews", "page", top="100", startingWith= "1", segment_id= "Loyal_Visitors")


#Specifying two specific pages, trended by hour for pageviews in the Loyal_Visitors segment
specific_pages_by_hour <-
QueueTrended("keystonerandy", "2013-02-13", "2013-02-19", "hour",
"pageviews", "page", selected = c("http://randyzwitch.com",
"http://randyzwitch.com/about"), segment_id = "Loyal_Visitors")

)
   }
}
\seealso{
\code{\link{GetAvailableMetrics}} \cr
\code{\link{GetSegments}} \cr
\code{\link{GetAvailableElements}}
}
\keyword{QueueTrended}
>>>>>>> master

